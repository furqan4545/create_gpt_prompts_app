<section className="w-full flex-center flex-col">
{/* the classes that we can see above are from tailwind.css It's the best CSS package for designing front end page */}
      <h1 className="head_text text-center">   
{/* ok whenever you see "_" in any classname it means that it is coming from our own css file which is global.css */}

import Link from 'next/link';
import Image from 'next/image';

The link import allows us to move to the other page through link
The image import allow us to optimize images on our page. 

// useEffect: 
This hook lets you perform side effects in function components. Side effects could be data fetching, subscriptions, or manually changing the DOM.
For example, consider a news website. When you open an article, the website might need to fetch the article's content from a server. In a React component for this article, you could use the useEffect hook to fetch the article content when the component mounts.
Code example:
 // Declare a new state variable, which we'll call "count"
  const [count, setCount] = useState(0);

  // Similar to componentDidMount and componentDidUpdate:
  useEffect(() => {
    // Update the document title using the browser API
    document.title = `You clicked ${count} times`;
  }, [count]); // Only re-run the effect if count changes


  // toggleDropdown && 
  It means if toggleDropdown is equals to true. 

SessionProvider:
Session Provider in nextjs is simply the react component which provides user session detail to the application. 
For e.g. SessionProvider makes the session data available to all components in the application, and useSession is used
to access the session data in the Header component. If the user is signed in, their name is displayed in the header. 

const provider = ({ children, session }) => {
      <SessionProvider session={session}>
            {children}
      </SessionProvider>
}
The above line is defining a new functional component called provider. This component accepts two props: children and session.
children is a special prop in React that is used to pass components as data to other components, allowing those components to be
reused. In this case, children represents the components that will be wrapped by the SessionProvider.
session is a prop that will be passed to the SessionProvider. It represents the session data that SessionProvider will make available to all components in the application.

For generating NEXTAUTH_SECRET, use this website. 

https://www.cryptool.org/en/cto/openssl

NEXTAUTH_URL=http://127.0.0.1:3000
NEXTAUTH_URL_INTERNAL=http://127.0.0.1:3000

The above 2 parameters will be replaced by the production url once deployed. 

session?.user  // this mean we are checking if the user exist. 


For creating a new page you need to create a new folder within app folder. This will create a new page. 


    




